// actual projects from my github
// add information and expand as needed
export const portfolioData = [
    { id: 1, name: "TaskAttacker", github:"https://github.com/Michael-Hellon/TaskAttacker", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/TaskAttacker.png", url: "https://taskattacker.onrender.com/", description: "A daily planner that allows the user to create, update and deletes tasks as well as start times for those tasks."},  
    { id: 2, name: "PetFinder", github:"https://github.com/Michael-Hellon/PetFinder", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/PetFinder.png", url: "https://michael-hellon.github.io/PetFinder/", description: "This webapp will allow user to be able to find adoption centers nearby, animals held by centers, and directions to them."},
    { id: 3, name: "Model View Controller", github:"https://github.com/Michael-Hellon/14-Model-View-Controller-MVC-Tech-Blog", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/MVC_screenshot.png", url: "https://one4-model-view-controller-mvc-tech-blog-ibzo.onrender.com/" , description: "This is a CMS-style blog site similar to a Wordpress site, where developers can publish their blog posts and comment on other developersâ€™ posts as well. It follow the MVC paradigm in its architectural structure, using Handlebars.js as the templating language, Sequelize as the ORM, and the express-session npm package for authentication."},
    { id: 4, name: "Progressive Web Application", github:"https://github.com/Michael-Hellon/Progressive-Web-Applications-PWA-Text-Editor", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/JATE_screenshot.png" , url: "https://progressive-web-applications-pwa-text-6jq9.onrender.com/", description: "A single page text editor that runs in the browser, and will also function offline, that feature a number of data persistence techniques that serve as redundancy in case one of the options is not supported by the browser. This application implement methods for getting and storing data to an IndexedDB database. This application is deployed to Render."},  
    { id: 5, name: "NoSQL Social Network API", github:"https://github.com/Michael-Hellon/NoSQL-Social-Network-API", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/NoSQL_Social_Networking.png", description: "A MongoDB database that stores users inputs and displays it by the API route" },
    { id: 6, name: "Task Board", github:"https://github.com/Michael-Hellon/Task-Board---3rd-Party-APIs", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/Task_Board.png", description: "A simple task board that allows users to create tasks, assign due date and move them from one column to the next. The cards change colors if the due date is past, current or in the future."},
]

/* 
 { id: , name: "", github: "", img: "https://michael-hellon.github.io/React-Portfolio/src/assets/images/IMAGE_NAME.png", description: "" },
*/ 